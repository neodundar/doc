["src/nvim/shada.c", ["    .vval = { .v_string = NULL }", "  },", "          .additional_elements = NULL),"], "whitespace/indent"]
["src/nvim/shada.c", ["                                         (flags & kShaDaWantInfo", "       ? (kSDReadUndisableableData", "          | kSDReadRegisters"], "whitespace/alignment"]
["src/nvim/shada.c", ["             : 0))", "             : 0)", "                                         | (want_marks && get_shada_parameter('\\'') > 0"], "whitespace/alignment"]
["src/nvim/shada.c", ["                                         | (want_marks && get_shada_parameter('\\'') > 0", "         ? kSDReadLocalMarks | kSDReadChanges", "         : 0)"], "whitespace/alignment"]
["src/nvim/shada.c", ["         ? kSDReadLocalMarks | kSDReadChanges", "         : 0)", "                                         | (get_old_files"], "whitespace/alignment"]
["src/nvim/shada.c", ["                                         | (get_old_files", "         ? kSDReadLocalMarks", "         : 0));"], "whitespace/alignment"]
["src/nvim/shada.c", ["         ? kSDReadLocalMarks", "         : 0));", "  if (srni_flags == 0) {"], "whitespace/alignment"]
["src/nvim/shada.c", ["                                         (flags & kShaDaWantInfo", "       ? (kSDReadUndisableableData", "          | kSDReadRegisters"], "whitespace/alignment"]
["src/nvim/shada.c", ["             : 0))", "             : 0)", "                                         | (want_marks && get_shada_parameter('\\'') > 0"], "whitespace/alignment"]
["src/nvim/shada.c", ["                                         | (want_marks && get_shada_parameter('\\'') > 0", "         ? kSDReadLocalMarks | kSDReadChanges", "         : 0)"], "whitespace/alignment"]
["src/nvim/shada.c", ["         ? kSDReadLocalMarks | kSDReadChanges", "         : 0)", "                                         | (get_old_files"], "whitespace/alignment"]
["src/nvim/shada.c", ["                                         | (get_old_files", "         ? kSDReadLocalMarks", "         : 0));"], "whitespace/alignment"]
["src/nvim/shada.c", ["         ? kSDReadLocalMarks", "         : 0));", "  if (srni_flags == 0) {"], "whitespace/alignment"]
["src/nvim/shada.c", ["        (cur_entry.data.search_pattern.is_substitute_pattern", "           ? &get_substitute_pattern", "           : &get_search_pattern)(&pat);"], "whitespace/alignment"]
["src/nvim/shada.c", ["           ? &get_substitute_pattern", "           : &get_search_pattern)(&pat);", "        if (pat.pat != NULL && pat.timestamp >= cur_entry.timestamp) {"], "whitespace/alignment"]
["src/nvim/shada.c", ["      (cur_entry.data.search_pattern.is_substitute_pattern", "         ? &set_substitute_pattern", "         : &set_search_pattern)((SearchPattern) {"], "whitespace/alignment"]
["src/nvim/shada.c", ["         ? &set_substitute_pattern", "         : &set_search_pattern)((SearchPattern) {", "        .magic = cur_entry.data.search_pattern.magic,"], "whitespace/alignment"]
["src/nvim/shada.c", ["        .timestamp = cur_entry.timestamp,", "      });", "      if (cur_entry.data.search_pattern.is_last_used) {"], "whitespace/indent"]
["src/nvim/shada.c", ["        .timestamp = cur_entry.timestamp,", "      });", "      if (cur_entry.data.search_pattern.is_last_used) {"], "whitespace/indent"]
["src/nvim/shada.c", ["    assert(entry.type == kSDItemJump || entry.type == kSDItemChange", "             ? CHECK_DEFAULT(entry, filemark.name)", "             : true);"], "whitespace/alignment"]
["src/nvim/shada.c", ["             ? CHECK_DEFAULT(entry, filemark.name)", "             : true);", "    if (!CHECK_DEFAULT(entry, filemark.name)) {"], "whitespace/alignment"]
["src/nvim/shada.c", ["                                     + (size_t)(entry.data.reg.additional_data == NULL", "                      ? 0", "                      : entry.data.reg.additional_data->dv_hashtab.ht_used));"], "whitespace/alignment"]
["src/nvim/shada.c", ["                      ? 0", "                      : entry.data.reg.additional_data->dv_hashtab.ht_used));", "    msgpack_pack_map(spacker, map_size);"], "whitespace/alignment"]
["src/nvim/shada.c", ["                                     + (size_t)(entry.data.reg.additional_data == NULL", "                      ? 0", "                      : entry.data.reg.additional_data->dv_hashtab.ht_used));"], "whitespace/alignment"]
["src/nvim/shada.c", ["                      ? 0", "                      : entry.data.reg.additional_data->dv_hashtab.ht_used));", "    msgpack_pack_map(spacker, map_size);"], "whitespace/alignment"]
["src/nvim/shada.c", ["      COMPARE_WITH_ENTRY((entry.data.search_pattern.is_substitute_pattern", "                            ? &wms->sub_search_pattern", "                            : &wms->search_pattern), entry);"], "whitespace/alignment"]
["src/nvim/shada.c", ["                            ? &wms->sub_search_pattern", "                            : &wms->search_pattern), entry);", "      break;"], "whitespace/alignment"]
