["src/nvim/lib/ringbuf.h", ["  ((rb)->first == NULL ? 0 \\", "                       : ((rb)->next == (rb)->first) ? (size_t)((rb)->buf_end - (rb)->buf) + 1 \\", "                                                     : ((rb)->next > \\"], "whitespace/alignment"]
["src/nvim/lib/ringbuf.h", ["                       : ((rb)->next == (rb)->first) ? (size_t)((rb)->buf_end - (rb)->buf) + 1 \\", "                                                     : ((rb)->next > \\", "                                                        (rb)->first) ? (size_t)((rb)->next - \\"], "whitespace/alignment"]
["src/nvim/lib/ringbuf.h", ["                                                                                (rb)->first) \\", "                                                                     : (size_t)((rb)-> \\", "                                                                                next - (rb)->buf + \\"], "whitespace/alignment"]
["src/nvim/lib/ringbuf.h", ["  size_t varname##_length_fa_ = _RINGBUF_LENGTH(rb); \\", "  for (RBType *varname = ((rb)->first == NULL ? (rb)->next : (rb)->first); \\", "       varname##_length_fa_; \\"], "readability/braces"]
["src/nvim/lib/ringbuf.h", ["  size_t varname##_length_ib_ = _RINGBUF_LENGTH(rb); \\", "  for (varname = ((rb)->next == (rb)->buf ? (rb)->buf_end : (rb)->next - 1); \\", "       varname##_length_ib_; \\"], "readability/braces"]
