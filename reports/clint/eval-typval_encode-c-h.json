["src/nvim/eval/typval_encode.c.h", ["                                                      const char *const objname)", "REAL_FATTR_NONNULL_ARG(2, 3, 4, 7) REAL_FATTR_WARN_UNUSED_RESULT", "  REAL_FATTR_ALWAYS_INLINE;"], "whitespace/indent"]
["src/nvim/eval/typval_encode.c.h", ["                                            const char *const objname)", "REAL_FATTR_NONNULL_ARG(2, 4, 6) REAL_FATTR_WARN_UNUSED_RESULT;", ""], "whitespace/indent"]
["src/nvim/eval/typval_encode.c.h", ["        },", "      }));", "    break;"], "whitespace/indent"]
["src/nvim/eval/typval_encode.c.h", ["        },", "      }));", "    TYPVAL_ENCODE_CONV_REAL_LIST_AFTER_START(tv, _mp_last(*mpstack));"], "whitespace/indent"]
["src/nvim/eval/typval_encode.c.h", ["            || ((highest_bits", "                   = TV_LIST_ITEM_TV(highest_bits_li)->vval.v_number)", "                < 0)) {"], "whitespace/alignment"]
["src/nvim/eval/typval_encode.c.h", ["            || ((highest_bits", "                   = TV_LIST_ITEM_TV(highest_bits_li)->vval.v_number)", "                < 0)) {"], "whitespace/alignment"]
["src/nvim/eval/typval_encode.c.h", ["              },", "            }));", "        break;"], "whitespace/indent"]
["src/nvim/eval/typval_encode.c.h", ["              },", "            }));", "        break;"], "whitespace/indent"]
["src/nvim/eval/typval_encode.c.h", ["            || ((type", "                   = TV_LIST_ITEM_TV(tv_list_first(val_list))->vval.v_number)", "                > INT8_MAX)"], "whitespace/alignment"]
["src/nvim/eval/typval_encode.c.h", ["            || ((type", "                   = TV_LIST_ITEM_TV(tv_list_first(val_list))->vval.v_number)", "                > INT8_MAX)"], "whitespace/alignment"]
["src/nvim/eval/typval_encode.c.h", ["        },", "      }));", "    TYPVAL_ENCODE_CONV_REAL_DICT_AFTER_START(tv, tv->vval.v_dict,"], "whitespace/indent"]
["src/nvim/eval/typval_encode.c.h", ["                                              typval_T *const tv, const char *const objname)", "REAL_FATTR_NONNULL_ARG(2, 3) REAL_FATTR_WARN_UNUSED_RESULT;", ""], "whitespace/indent"]
["src/nvim/eval/typval_encode.c.h", ["              },", "            }));", "        }"], "whitespace/indent"]
["src/nvim/eval/typval_encode.c.h", ["                },", "              }));", "          TYPVAL_ENCODE_CONV_REAL_DICT_AFTER_START(NULL, pt->pt_dict,"], "whitespace/indent"]
